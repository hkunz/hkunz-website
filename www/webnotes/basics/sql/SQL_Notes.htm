<!-- if this DTD is enabled the page displays incorrectly the <code> sections
<!DOCTYPE html
PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-->
<html>
<!-- 
    DISCUSSIONS: 
    SQL Intro
	SQL Select
	SQL Where
	SQL Insert
	SQL Update
	SQL Delete
-->
<head>
<title>(1/3) SQL Tutorials</title>
<style type="text/css">
<!--
body{font-family:arial}
h2{background-color:lime}
h2:first-letter{float: top;width: 0.7em; font-size: 200%; font-family: algerian;}
code{font-size:18;color:red;}
-->
</style>

</head>

<body bgcolor="#CCFF99">

<h2>SQL Introduction</h2>
<p><b>SQL</b> is an <b>ANSI</b> (<b>A</b>merican <b>N</b>ational <b>S</b>tandards <b>I</b>nstitute) standard computer language for accessing and manipulating database systems. SQL statements are used to retrieve and update data in a database. SQL works with database programs like MS Access, DB2, Informix, MS SQL Server, Oracle, Sybase, etc.</p>
<p>Unfortunately, there are many different versions of the SQL language, but to be in compliance with the ANSI standard, they must support the same major keywords in a similar manner (such as SELECT, UPDATE, DELETE, INSERT, WHERE, and others).</p><p><b>Note: </b>Most of the SQL database programs also have their own proprietary extensions in addition to the SQL standard!</p>
<hr />
<h2>What is SQL?</h2>
<ul>
  <li>SQL stands for <b>S</b>tructured <b>Q</b>uery <b>L</b>anguage</li>
  <li>SQL allows you to access a database</li>
  <li>SQL is an ANSI (<b>A</b>merican <b>N</b>ational <b>S</b>tandards <b>I</b>nstitute)  standard computer language</li>
  <li>SQL can execute queries against a database</li>
  <li>SQL can retrieve data from a database</li>
  <li>SQL can insert new records in a database</li>
  <li>SQL can delete records from a database</li>
  <li>SQL can update records in a database</li>
</ul>
<hr />

<h3>SQL Data Manipulation Language (DML)</h3>
<p>SQL (Structured Query Language) is a syntax for executing queries. But the SQL
language also includes a syntax to update, insert, and delete
records.</p>
<p>These query and update commands together form the Data Manipulation Language (DML) 
part of SQL:</p>
<ul>
  <li><b>SELECT</b> - extracts data from a database table</li>
  <li><b>UPDATE</b> - updates data in a database table</li>
  <li><b>DELETE</b> - deletes data from a database table</li>
  <li><b>INSERT INTO</b> - inserts new data into a database table</li>
</ul>
<hr />
<h3>SQL Data Definition Language (DDL)</h3>
<p>The Data Definition Language (DDL) part of SQL permits database tables to be
created or deleted. We can also define indexes (keys), specify links between tables,
and impose constraints between database tables.</p>
<p>The most important DDL statements in SQL are:&nbsp;</p>
<ul>
  <li><b>CREATE TABLE</b> - creates a new database table</li>
  <li><b>ALTER TABLE </b>- alters (changes) a database table</li>
  <li><b>DROP TABLE</b> - deletes a database table</li>
  <li><b>CREATE INDEX</b> - creates an index (search key)</li>
  <li><b>DROP INDEX</b>&nbsp;- deletes an index</li>
</ul><hr />

<h2>SQL SELECT Statement</h2>
<p>The <b>SELECT statement</b> is used to select data from a table.<br />
The tabular result is stored in a result table (called the <b>result-set</b>).</p>

<table class="ex" border="1" cellspacing="0" width="500" bgcolor="#FFFFCC">
  <tbody><tr><td><code>&nbsp;<b>SELECT </b><i>column_name(s) </i><b>FROM </b><i>table_name</i></code></td></tr>
</tbody>
</table><hr />

<b>Example: The database table "Persons":</b></p>
<table class="ex" border="1" cellspacing="0" width="500" bgcolor="#CCFFCC">
  <tbody><tr>
    <th align="left">LastName</th>
    <th align="left">FirstName</th>
    <th align="left">Address</th>
    <th align="left">City</th>
  </tr>
  <tr>
    <td>Hansen</td>
    <td>Ola</td>
    <td>Timoteivn 10</td>
    <td>Sandnes</td>
  </tr>
  <tr>
    <td>Svendson</td>
    <td>Tove</td>
    <td>Borgvn 23</td>
    <td>Sandnes</td>
  </tr>
  <tr>
    <td>Pettersen</td>
    <td>Kari</td>
    <td>Storgt 20</td>
    <td>Stavanger</td>
  </tr>
</tbody></table><br />

<code>&nbsp;<b>SELECT </b>LastName,FirstName <b>FROM </b>Persons</code>

<p><b>result-set</b></p>
<table class="ex" border="1" cellspacing="0" width="250" bgcolor="#CCFFCC">
  <tbody><tr>
    <th align="left">LastName</th>
    <th align="left">FirstName</th>
  </tr>
  <tr>
    <td>Hansen</td>
    <td>Ola</td>
  </tr>
  <tr>
    <td>Svendson</td>
    <td>Tove</td>
  </tr>
  <tr>
    <td>Pettersen</td>
    <td>Kari</td>
  </tr>
</tbody></table><br />

<b>To select all columns within the "Persons" Table use:</b><br /> 
<code>&nbsp;<b>SELECT </b>* <b>FROM </b>Persons</code><hr />
<p>The result from a SQL query is stored in a result-set. Most database software systems allow navigation of the
result set with programming functions, like: Move-To-First-Record,
Get-Record-Content, Move-To-Next-Record, etc.</p>
<p>Programming functions like these are not a part of this tutorial. To learn about accessing data with function calls, 
please visit
our <a href="http://www.w3schools.com/ado/default.asp">ADO tutorial</a>. </p>
<hr />

<h3 style="background:#FF4500">The SELECT DISTINCT Statement</h3>
<p>The DISTINCT keyword is used to return only distinct (different) values.</p>
<b>Example: "Orders" table</b>
<table class="ex" border="1" cellspacing="0" width="250" bgcolor="#CCFFCC">
  <tbody><tr>
    <th align="left">Company</th>
    <th align="left">OrderNumber</th>
  </tr>
  <tr>
    <td>Sega</td>
    <td>3412</td>
  </tr>
  <tr>
    <td>W3Schools</td>
    <td>2312</td>
  </tr>
  <tr>
    <td>Trio</td>
    <td>4678</td>
  </tr>
  <tr>
    <td>W3Schools</td>
    <td>6798</td>
  </tr>
</tbody></table>
<p><code>&nbsp;<b>SELECT DISTINCT </b>Company <b>FROM</b> Orders</code></p>
<b>Result-Set:</b></p>
<table class="ex" border="1" cellspacing="0" width="125" bgcolor="#CCFFCC">
  <tbody><tr>
    <th align="left">Company</th>
  </tr>
  <tr>
    <td>Sega</td>
  </tr>
  <tr>
    <td>W3Schools</td>
  </tr>
  <tr>
    <td>Trio</td>
  </tr></tbody></table>

<h2>SQL WHERE Statement</h2>
<p>The WHERE clause is used to specify a selection criterion.To conditionally select data from a table, a WHERE clause can be added to the SELECT statement.</p>
<table class="ex" border="1" cellspacing="0" width="500" bgcolor="#FFFFCC">
  <tbody><tr><td><code>&nbsp;<b>SELECT </b><i>column_name(s) </i><b>FROM </b>table<br />&nbsp;<b>WHERE </b><i>column_name (operator) value</i></code></td></tr>
</tbody>
</table><hr />
<p><b>Operators:</b></p>
<table class="ex" border="1" cellspacing="" width="450" bgcolor="#FFFF99">
  <tbody><tr>
    <th valign="top"><b>Operator</b></th>
    <th><b>Description</b></th>
  </tr>
  <tr>
    <td valign="top" align="center"><code><b>=</b></code></td>
    <td><code style="color:blue">&nbsp;Equal</code></td>
  </tr>
  <tr>
    <td valign="top" align="center"><code><b>&lt;&gt;</b></code></td>
    <td><code style="color:blue">&nbsp;Not equal</code></td>
  </tr>
  <tr>
    <td valign="top" align="center"><code><b>&gt;</b></code></td>
    <td><code style="color:blue">&nbsp;Greater than</code></td>
  </tr>
  <tr>
    <td valign="top" align="center"><code><b>&lt;</b></code></td>
    <td><code style="color:blue">&nbsp;Less than</code></td>
  </tr>
  <tr>
    <td valign="top" align="center"><code><b>&gt;=</b></code></td>
    <td><code style="color:blue">&nbsp;Greater than or equal</code></td>
  </tr>
  <tr>
    <td valign="top" align="center"><code><b>&lt;=</b></code></td>
    <td><code style="color:blue">&nbsp;Less than or equal</code></td>
  </tr>
  <tr>
    <td valign="top" align="center"><code><b>&nbsp;BETWEEN&nbsp;</b></code></td>
    <td><code style="color:blue">&nbsp;Between an inclusive range</code></code></td>
  </tr>
  <tr>
    <td valign="top" align="center"><code><b>LIKE</b></code></td>
    <td><code style="color:blue">&nbsp;Search for a pattern</code></td>
  </tr>
	<tr>
    <td valign="middle" align="center"><code><b>IN</b></code></td>
    <td><code style="color:blue">&nbsp;If you know the exact value &nbsp;you want to return for at &nbsp;least one of the 
	columns</code></td>
  </tr>
</tbody></table>
<p>
<b>Note:</b> In some versions of SQL the <code><b>&lt;&gt;</b></code> operator may be written as
<code><b>!=</b></code></p><hr />
<p><b>From example "Persons" table:</b><br />
<code><b>&nbsp;SELECT </b>* <b>FROM </b>Persons <b>WHERE </b>City='Sandnes'</code></p>
<p><b>Result-Set:</b></p>

<table class="ex" border="1" cellspacing="0" width="500" bgcolor="#CCFFCC">
<tbody><tr>
    <th align="left">LastName</th>
    <th align="left">FirstName</th>
    <th align="left">Address</th>
    <th align="left">City</th>
  </tr>
  <tr>
    <td>Hansen</td>
    <td>Ola</td>
    <td>Timoteivn 10</td>
    <td>Sandnes</td>
  </tr>
  <tr>
    <td>Svendson</td>

    <td>Tove</td>
    <td>Borgvn 23</td>
    <td>Sandnes</td>
  </tr></tbody></table>
<p><b>Note: </b>SQL uses <b>single quotes</b> around <b>text values</b> (most database systems will also accept <b>double quotes)</b>.<br />Numeric values should NOT be enclosed in quotes.</p>
<hr />

<h3 style="background:#FF4500">The LIKE Condition</h3>
<p>The LIKE condition is used to specify a search for a pattern in a column.</p>
<table class="ex" border="1" cellspacing="0" width="500" bgcolor="#FFFFCC">
  <tbody><tr><td><code>&nbsp;<b>SELECT </b><i>column_name(s) </i><b>FROM </b><i>table_name</i><br />
&nbsp;<b>WHERE </b><i>column_name </i><b>LIKE </b><i>pattern</i></code></td></tr>
</tbody></table>
<p>A <b>percent sign "<code style="font-size:18pt;">%</code>"</b> can be used to define <b>wildcards</b> (missing letters in the pattern) both before and after the pattern.</p>
<hr />
<p>The following SQL statement will return persons with first names that start with the letter 
'<b>K</b>':</p>

<table class="ex" border="1" cellspacing="0" width="500" bgcolor="#CCFFCC">
  <tbody><tr>
    <td><code>&nbsp;<b>SELECT </b> * <b>FROM</b> Persons<br />&nbsp;<b>WHERE</b> FirstName <b>LIKE</b> 'K%'</code></td>

  </tr>
</tbody></table>
<p>The following SQL statement will return persons with first names that end with an '<b>e</b>':</p>

<table class="ex" border="1" cellspacing="0" width="500" bgcolor="#CCFFCC">
  <tbody><tr>
    <td><code>&nbsp;<b>SELECT </b> * <b>FROM</b> Persons<br />&nbsp;<b>WHERE</b> FirstName <b>LIKE</b> '%e'</code></td>
  </tr>
</tbody></table>
<p>
The following SQL statement will return persons with first names that contain the 
pattern '<b>ga</b>':</p>

<table class="ex" border="1" cellspacing="0" width="500" bgcolor="#CCFFCC">
  <tbody><tr>
    <td><code>&nbsp;<b>SELECT </b> * <b>FROM</b> Persons<br />&nbsp;<b>WHERE</b> FirstName <b>LIKE</b> '%ga%'</code></td>
  </tr>
</tbody></table><hr />

<h2>SQL INSERT INTO Statement</h2>
<p>The INSERT INTO statement is used to insert new rows into a table.</p>
<table class="ex" border="1" cellspacing="0" width="520" bgcolor="#FFFFCC">
  <tbody><tr><td><code>&nbsp;<b>INSERT INTO </b><i>table_name<br /></i><b>&nbsp;VALUES </b><i>(value1, value2,...)</i>
</code></td></tr></tbody></table>
<p>You can also specify the columns for which you want to insert data:</p>
<table class="ex" border="1" cellspacing="0" width="520" bgcolor="#FFFFCC">
  <tbody><tr><td><code>&nbsp;<b>INSERT INTO </b><i>table_name <i>(column1, column2,...)</i><br /></i><b>&nbsp;VALUES </b><i>(value1, value2, ...)</i></code></td></tr>
</tbody></table>
<hr />

<h3>Insert a New Row (Example: "Persons" Table)</h3>
<table class="ex" border="1" cellspacing="0" width="520" bgcolor="#CCFFCC">
    <tbody><tr>
      <th align="left">LastName</th>
      <th align="left">FirstName</th>
      <th align="left">Address</th>
      <th align="left">City</th>
    </tr><tr>
      <td>Gutierrez</td>
      <td>Hanna</td>
      <td>SanF 20</td>
      <td>Millbrae</td></tr>
</tbody></table><br />

<table class="ex" border="1" cellspacing="0" width="520" bgcolor="#CCFFCC">
  <tbody><tr>
    <td><code>&nbsp;<b>INSERT INTO </b>Persons<br />&nbsp;<b>VALUES </b>('Kunz','Harry','1944 Su','Dauin')</code></td>
  </tr>
</tbody></table>
<hr />
<h3>Insert Data in Specified Columns (Example: "Persons" Table)</h3>
<table class="ex" border="1" cellspacing="0" width="520" bgcolor="#CCFFCC">
  <tbody><tr>
    <td><code>&nbsp;<b>INSERT INTO </b>Persons (Lastname,Address)<br />&nbsp;<b>VALUES </b>('Rudolf','Hessen 47')</code></td>
  </tr>
</tbody></table><br />
<b>Final Table Output: ("Persons" Table)</b>
<table class="ex" border="1" cellspacing="0" width="520" bgcolor="#CCFFCC">
<tbody><tr>
      <th align="left">LastName</th>
      <th align="left">FirstName</th>
      <th align="left">Address</th>
      <th align="left">City</th>
    </tr><tr>
      <td>Gutierrez</td>
      <td>Hanna</td>
      <td>SanF 20</td>
      <td>Millbrae</td>
    </tr><tr>
      <td>Kunz</td>
      <td>Harry</td>
      <td>1944 Su</td>
      <td>Dauin</td>
    </tr><tr>
      <td>Rudolf</td>
      <td>&nbsp;</td>
      <td>Hessen 47</td>
      <td>&nbsp;</td>
    </tr>
</tbody></table><hr />

<h2>SQL UPDATE Statement</h2>
<p>The UPDATE statement is used to modify the data in a table.</p>
<table class="ex" border="1" cellspacing="0" width="500" bgcolor="#FFFFCC">
  <tbody><tr><td><code>&nbsp;<b>UPDATE </b><i>table_name</i><br />
<b>&nbsp;SET </b><i>column_name = new_value</i><br /></i><b>&nbsp;WHERE </b><i>column_name = some_value</i>
</code></td></tr></tbody></table>
<hr />
<h3>Update <u>one Column</u> in a Row (latest "Persons" Table)</h3>
<table class="ex" border="1" cellspacing="0" width="500" bgcolor="#CCFFCC">
  <tbody><tr><td><code>&nbsp;<b>UPDATE </b><i>Persons</i><b>&nbsp;SET </b><i>Firstname = 'Rita'</i><br /><b>&nbsp;WHERE </b><i>Lastname = 'Rudolf'</i></code></td></tr></tbody></table>
<hr />
<h3>Update <u>several Columns</u> in a Row (latest "Persons" Table)</h3>
<table class="ex" border="1" cellspacing="0" width="500" bgcolor="#CCFFCC">
  <tbody><tr><td><code>&nbsp;<b>UPDATE </b><i>Persons</i><b><br />&nbsp;SET </b><i>Address='Semmel 17', City='Frankfurt'</i><br /><b>&nbsp;WHERE </b><i>Lastname = 'Rudolf'</i></code></td></tr></tbody></table>
<hr />
<b>Final Table Output: ("Persons" Table)</b>
<table class="ex" border="1" cellspacing="0" width="500" bgcolor="#CCFFCC">
<tbody><tr>
      <th align="left">LastName</th>
      <th align="left">FirstName</th>
      <th align="left">Address</th>
      <th align="left">City</th>
    </tr><tr>
      <td>Gutierrez</td>
      <td>Hanna</td>
      <td>SanF 20</td>
      <td>Millbrae</td>
    </tr><tr>
      <td>Kunz</td>
      <td>Harry</td>
      <td>1944 Su</td>
      <td>Dauin</td>
    </tr><tr>
      <td>Rudolf</td>
      <td>Rita</td>
      <td>Semmel 17</td>
      <td>Frankfurt</td>
    </tr>
</tbody></table><hr />

<h2>SQL DELETE Statement</h2>
<p>The DELETE statement is used to delete rows in a table.</p>
<table class="ex" border="1" cellspacing="0" width="380" bgcolor="#FFFFCC">
  <tbody><tr><td><code>&nbsp;<b>DELETE FROM </b><i>table_name</i><br />
&nbsp;<b>WHERE </b><i>column_name = some_value</i>
</code></td></tr></tbody></table>
<hr />
<h3>Delete a Row (Example: "Persons" Table)</h3>
<table class="ex" border="1" cellspacing="0" width="380" bgcolor="#CCFFCC">
  <tbody><tr><td><code>&nbsp;<b>DELETE FROM </b><i>Persons</i><br />
&nbsp;<b>WHERE </b><i>Lastname = 'Rudolf'</i>
</code></td></tr></tbody></table><hr />
<h3>Delete All Rows</h3>
<p>It is possible to delete all rows in a table without deleting the table. This means that the table structure, attributes, and indexes will be intact:</p>
<table class="ex" border="1" cellspacing="0" width="380" bgcolor="#FFFFCC">
  <tbody><tr><td><code>&nbsp;<b>DELETE FROM </b><i>table_name</i><br />or<br />
&nbsp;<b>DELETE&nbsp;</b>*&nbsp;<b>FROM</b>&nbsp;<i>table_name</i>
</code></td></tr></tbody></table><hr />
<p><big><b>Visit <a href="http://www.w3schools.com/sql/sql_tryit.asp">THIS LINK</a> for a "Try it" of the use of SELECT statement</big></b></p>
<hr />


</body>
</html>